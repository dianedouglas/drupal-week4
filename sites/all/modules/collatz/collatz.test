<?php
class CollatzUnitTests extends DrupalUnitTestCase {
    public static function getInfo() {
        // Note: getInfo() strings should not be translated.
        return array(
            'name' => 'Collatz unit tests',
            'description' => 'Test that get_collatz works properly.',
            'group' => 'Epicodus Examples Tests',
        );

    }

    function testGetCollatzOf1() {
        $input = 1;
        $result = get_collatz($input);
        $this->assertEqual($result, [1]);
    }

    function testGetCollatzOf2() {
        $input = 2;
        $result = get_collatz($input);
        $this->assertEqual($result, [2, 1]);
    }

    function testGetCollatzOf15() {
        $input = 15;
        $result = get_collatz($input);
        $this->assertEqual($result, [15, 46, 23, 70, 35, 106, 53, 160, 80, 40, 20, 10, 5, 16, 8, 4, 2, 1]);
    }

}

class CollatzFunctionalTests extends DrupalWebTestCase {

    public static function getInfo() {
        return array(
            'name' => 'Collatz functional tests',
            'description' => 'Tests for the Collatz module.',
            'group' => 'Epicodus Examples Tests',
        );
    }

    public function setUp() {
        parent::setUp(array('collatz'));

        $user = $this->drupalCreateAdminUser();
        $this->drupalLogin($user);

        $info = array();
        $info['input'] = "1";
        //found the URL to post the form to by manually clicking to the Add Content menu and clicking on Page.
        $this->drupalPost('collatz', $info, t('submit'));

        $path['source'] = 'collatz';
        $path['alias'] = 'collatz_form';
        path_save($path);
    }

    public function drupalCreateAdminUser(array $permissions = array()) {
        $roles = user_roles();
        $index = array_search('administrator', $roles);
        $user = $this->drupalCreateUser($permissions);
        $user->roles[$index] = 'administrator';
        return user_save($user);
    }

    public function testCollatzForm() {
        $this->drupalGet('collatz');
        $this->assertText("Input", 'The text on the page is correct. Hoorah!');

        $this->drupalGet('collatz_success');
        $this->assertText("1", 'The text on the page is correct. Hoorah!');
    }

    public function drupalCreateAuthenticatedUser($permissions = array()) {
        $roles = user_roles();
        $index = array_search('authenticated', $roles);
        $user = $this->drupalCreateUser($permissions);
        $user->roles[$index] = 'authenticated';
        return user_save($user);
    }

}
